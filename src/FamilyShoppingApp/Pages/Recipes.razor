@page "/recipes"
@using FamilyShoppingApp.Services
@using FamilyShoppingApp.ViewModels
@inject RecipeService RecipeService
@inject ProductService ProductService
@inject ExceptionHandlerService ExceptionHandler

<PageTitle>Recipes</PageTitle>

<h1>Recipes</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <div class="input-group">
            <select class="form-select" 
                    value="@selectedProductFilterId" 
                    @onchange="OnProductFilterChanged"
                    data-testid="product-filter-select">
                <option value="0">All recipes</option>
                @foreach (var product in availableProducts)
                {
                    <option value="@product.Id">Recipes using @product.Name</option>
                }
            </select>
            @if (selectedProductFilterId > 0)
            {
                <button class="btn btn-outline-secondary" 
                        @onclick="ClearProductFilter"
                        data-testid="clear-filter-button">
                    Clear Filter
                </button>
            }
        </div>
    </div>
    <div class="col-md-6 text-end">
        <button class="btn btn-primary" 
                @onclick="ShowCreateForm" 
                data-testid="create-recipe-button">
            Add New Recipe
        </button>
    </div>
</div>

@if (showCreateEditForm)
{
    <div class="card mb-4" data-testid="recipe-form">
        <div class="card-header">
            <h5>@(editingRecipeId.HasValue ? "Edit Recipe" : "Create New Recipe")</h5>
        </div>
        <div class="card-body">
            <form @onsubmit="HandleSubmit" @onsubmit:preventDefault="true">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="recipeName" class="form-label">Recipe Name *</label>
                            <input id="recipeName" 
                                   class="form-control @(IsNameValid ? "is-valid" : (hasNameBeenTouched ? "is-invalid" : ""))"
                                   type="text" 
                                   value="@currentRecipe.Name" 
                                   @onchange="OnNameChanged"
                                   placeholder="Enter recipe name..."
                                   data-testid="recipe-name-input" />
                            @if (hasNameBeenTouched && !IsNameValid)
                            {
                                <div class="invalid-feedback">
                                    Recipe name is required.
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="servings" class="form-label">Servings *</label>
                            <input id="servings" 
                                   class="form-control @(IsServingsValid ? "is-valid" : (hasServingsBeenTouched ? "is-invalid" : ""))"
                                   type="number" 
                                   value="@currentRecipe.Servings" 
                                   min="1"
                                   @onchange="OnServingsChanged"
                                   data-testid="servings-input" />
                            @if (hasServingsBeenTouched && !IsServingsValid)
                            {
                                <div class="invalid-feedback">
                                    Servings must be at least 1.
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
                <div class="mb-3">
                    <label class="form-label">Ingredients (Products)</label>
                    @if (availableProducts.Any())
                    {
                        <div class="row">
                            @foreach (var product in availableProducts)
                            {
                                <div class="col-md-4 mb-2">
                                    <div class="form-check">
                                        <input class="form-check-input" 
                                               type="checkbox" 
                                               id="product-@product.Id"
                                               checked="@currentRecipe.SelectedProductIds.Contains(product.Id)"
                                               @onchange="(e) => OnProductSelectionChanged(product.Id, e)"
                                               data-testid="product-checkbox-@product.Id" />
                                        <label class="form-check-label" for="product-@product.Id">
                                            @product.Name
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No products available. <a href="/products">Add products first</a> to create recipes.
                        </div>
                    }
                </div>
                
                <div class="d-flex justify-content-between">
                    <div>
                        <button type="submit" 
                                class="btn btn-primary me-2" 
                                disabled="@(!IsFormValid)"
                                data-testid="save-recipe-button">
                            @(editingRecipeId.HasValue ? "Update Recipe" : "Create Recipe")
                        </button>
                        <button type="button" 
                                class="btn btn-secondary" 
                                @onclick="CancelEdit"
                                data-testid="cancel-button">
                            Cancel
                        </button>
                    </div>
                    @if (editingRecipeId.HasValue)
                    {
                        <button type="button" 
                                class="btn btn-outline-danger" 
                                @onclick="() => DeleteRecipe(editingRecipeId.Value)"
                                data-testid="delete-recipe-button">
                            Delete Recipe
                        </button>
                    }
                </div>
            </form>
        </div>
    </div>
}

@if (filteredRecipes.Any())
{
    <div class="card" data-testid="recipes-table">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                @if (selectedProductFilterId > 0)
                {
                    var productName = availableProducts.FirstOrDefault(p => p.Id == selectedProductFilterId)?.Name;
                    <span>Recipes using @productName (@filteredRecipes.Count)</span>
                }
                else
                {
                    <span>All Recipes (@filteredRecipes.Count)</span>
                }
            </h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Recipe Name</th>
                            <th>Servings</th>
                            <th>Ingredients</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var recipe in filteredRecipes)
                        {
                            <tr data-testid="recipe-row">
                                <td>@recipe.Name</td>
                                <td>@recipe.Servings</td>
                                <td>
                                    @if (recipe.SelectedProductIds.Any())
                                    {
                                        var ingredientNames = availableProducts
                                            .Where(p => recipe.SelectedProductIds.Contains(p.Id))
                                            .Select(p => p.Name);
                                        <span data-testid="recipe-ingredients">@string.Join(", ", ingredientNames)</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted" data-testid="recipe-ingredients">No ingredients</span>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-outline-primary me-2" 
                                            @onclick="() => EditRecipe(recipe.Id)"
                                            data-testid="edit-recipe-button">
                                        Edit
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" 
                                            @onclick="() => DeleteRecipe(recipe.Id)"
                                            data-testid="delete-recipe-button">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else if (!showCreateEditForm)
{
    @if (selectedProductFilterId > 0)
    {
        var productName = availableProducts.FirstOrDefault(p => p.Id == selectedProductFilterId)?.Name;
        <div class="alert alert-info" data-testid="no-filtered-recipes-message">
            No recipes found using @productName as an ingredient. <a href="#" @onclick="ClearProductFilter" @onclick:preventDefault="true">Show all recipes</a>
        </div>
    }
    else
    {
        <div class="alert alert-info" data-testid="no-recipes-message">
            No recipes found. Click "Add New Recipe" to get started.
        </div>
    }
}
