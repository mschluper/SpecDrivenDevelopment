@page "/stores"
@using FamilyShoppingApp.Services
@using FamilyShoppingApp.ViewModels
@inject StoreService StoreService
@inject ExceptionHandlerService ExceptionHandler

<PageTitle>Stores</PageTitle>

<h1>Stores</h1>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="ShowCreateForm" data-testid="create-store-button">
        Add New Store
    </button>
</div>

@if (showCreateEditForm)
{
    <div class="card mb-4" data-testid="store-form">
        <div class="card-header">
            <h5>@(editingStoreId.HasValue ? "Edit Store" : "Create New Store")</h5>
        </div>
        <div class="card-body">
            <form @onsubmit="HandleSubmit" @onsubmit:preventDefault="true">
                <div class="mb-3">
                    <label for="storeName" class="form-label">Store Name *</label>
                    <input id="storeName" 
                           class="form-control @(IsNameValid ? "is-valid" : (hasNameBeenTouched ? "is-invalid" : ""))"
                           type="text" 
                           value="@currentStore.Name" 
                           @onchange="OnNameChanged"
                           data-testid="store-name-input" />
                    @if (!IsNameValid && hasNameBeenTouched)
                    {
                        <div class="invalid-feedback" data-testid="name-validation-error">
                            Store name is required.
                        </div>
                    }
                </div>
                
                <div class="mb-3">
                    <label for="storeNotes" class="form-label">Notes</label>
                    <textarea id="storeNotes" 
                              class="form-control" 
                              rows="3"
                              value="@currentStore.Notes" 
                              @onchange="OnNotesChanged"
                              data-testid="store-notes-input"></textarea>
                </div>
                
                <div class="d-flex gap-2">
                    <button type="submit" 
                            class="btn btn-success" 
                            disabled="@(!IsFormValid)"
                            data-testid="save-store-button">
                        @(editingStoreId.HasValue ? "Update Store" : "Create Store")
                    </button>
                    <button type="button" 
                            class="btn btn-secondary" 
                            @onclick="CancelEdit"
                            data-testid="cancel-button">
                        Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
}

@if (stores.Any())
{
    <div class="table-responsive">
        <table class="table table-striped" data-testid="stores-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Notes</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var store in stores)
                {
                    <tr data-testid="store-row">
                        <td data-testid="store-name">@store.Name</td>
                        <td data-testid="store-notes">@store.Notes</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-2" 
                                    @onclick="() => EditStore(store.Id)"
                                    data-testid="edit-store-button">
                                Edit
                            </button>
                            <button class="btn btn-sm btn-outline-danger" 
                                    @onclick="() => DeleteStore(store.Id)"
                                    data-testid="delete-store-button">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (!showCreateEditForm)
{
    <div class="alert alert-info" data-testid="no-stores-message">
        No stores found. Click "Add New Store" to get started.
    </div>
}
